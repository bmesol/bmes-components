{"version":3,"file":"bundle.cjs.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/lib/components/Button/Button.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nexport enum ButtonVariants {\r\n  PRIMARY = \"primary\",\r\n  SECONDARY = \"secondary\",\r\n  SUCCESS = \"success\",\r\n  WARNING = \"warning\",\r\n  DANGER = \"danger\",\r\n  OUTLINE_PRIMARY = \"outline-primary\",\r\n  OUTLINE_SECONDARY = \"outline-secondary\",\r\n  OUTLINE_SUCCESS = \"outline-success\",\r\n  OUTLINE_WARNING = \"outline-warning\",\r\n  OUTLINE_DANGER = \"outline-danger\",\r\n}\r\n\r\ninterface ButtonProps {\r\n  label: string;\r\n  onClick: () => void;\r\n  variant: ButtonVariants;\r\n  classNames?: string;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  label,\r\n  onClick,\r\n  variant,\r\n  classNames = \"\",\r\n  isDisabled = false,\r\n}) => {\r\n  const maxLabelLength: number = 13;\r\n  const isValidLabel: boolean = label.length <= maxLabelLength ? true : false;\r\n  if (!isValidLabel) isDisabled = true;\r\n  return (\r\n    <>\r\n      <button\r\n        className={`button ${variant} ${classNames} ${\r\n          isDisabled ? \"disabled-button\" : \"\"\r\n        }`}\r\n        onClick={onClick}\r\n        disabled={isDisabled}\r\n      >\r\n        <span>{label.slice(0, maxLabelLength)}</span>\r\n      </button>\r\n      {!isValidLabel && (\r\n        <>\r\n          <br />\r\n          <span className=\"text-danger d-inline-block mt-1\">\r\n            Button labels must be no longer than {maxLabelLength} characters\r\n          </span>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  variant: PropTypes.oneOf(Object.values(ButtonVariants)).isRequired,\r\n  classNames: PropTypes.string,\r\n  isDisabled: PropTypes.bool,\r\n};\r\n\r\nexport default Button;\r\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ButtonVariants","PropTypes","string","isRequired","func","oneOf","Object","values","bool"],"mappings":"wOAAA,SAASA,EAAYC,EAAKC,QACX,IAARA,IAAiBA,EAAM,CAAA,GAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,GAnBY,CAqB1D,mzBCrBYe,w2EAAAA,QAWXA,oBAAA,GAXWA,EAAAA,yBAAAA,QAAAA,eAWX,CAAA,IAVC,QAAA,UACAA,EAAA,UAAA,YACAA,EAAA,QAAA,UACAA,EAAA,QAAA,UACAA,EAAA,OAAA,SACAA,EAAA,gBAAA,kBACAA,EAAA,kBAAA,oBACAA,EAAA,gBAAA,kBACAA,EAAA,gBAAA,kBACAA,EAAA,eAAA,iBA6COC,EAAAA,QAAUC,OAAOC,WACfF,EAAAA,QAAUG,KAAKD,WACfF,EAAS,QAACI,MAAMC,OAAOC,OAAOP,QAAAA,iBAAiBG,WAC5CF,EAAS,QAACC,OACVD,EAAS,QAACO"}